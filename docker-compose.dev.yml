version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: chat
      POSTGRES_PASSWORD: chatpw
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chat -d chatdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    working_dir: /src
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__Default=Host=postgres;Port=5432;Database=chatdb;Username=chat;Password=chatpw
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/src
    command: >
      sh -c "dotnet restore &&
             dotnet ef database update --project Chat.Api/Chat.Api.csproj --startup-project Chat.Api/Chat.Api.csproj || true && 
             dotnet watch run --project Chat.Api/Chat.Api.csproj"

  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:5000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    command: >
      sh -c "npm install && npm run dev"

volumes:
  postgres_data:
  frontend_node_modules: