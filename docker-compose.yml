version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: chat
      POSTGRES_PASSWORD: chatpw
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chat -d chatdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Chat.Api/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__Default=Host=postgres;Port=5432;Database=chatdb;Username=chat;Password=chatpw
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/src
    command: >
      sh -c "dotnet ef database update --project Chat.Api/Chat.Api.csproj --startup-project Chat.Api/Chat.Api.csproj || true && 
             dotnet run --project Chat.Api/Chat.Api.csproj"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - backend

volumes:
  postgres_data: